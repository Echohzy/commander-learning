#!/usr/bin/env node

const program = require('commander');
const fs = require('fs-extra');
const path = require('path');
const validateNpmPackageName = require('validate-npm-package-name');

let demoDirectory;

program
  .version('1.1.3')
  .usage('<demo-directory> [options]')
  .arguments('<demo-directory>')
  .action(function (name){
    demoDirectory = name
  }).parse(process.argv);

function exists(path){
  return fs.existsSync(path);
}

function printInfo(messages){
  if(!messages){
    return;
  }
  messages.forEach(function(item){
    console.error(item);
    console.log('\n');
  });
}

function checkName(projectName){
  const result = validateNpmPackageName(projectName);

  if(result.validForNewPackages){
    return true;
  }
  printInfo(result.errors);
  printInfo(result.warnings); 
  process.exit(1);
}

function createReactDemo(){
  if(!demoDirectory){
    console.error("The demo-directory is required.");
    process.exit(1);
  }
  const pathName = path.resolve(demoDirectory);
  const projectName = path.basename(pathName);

  if(exists(pathName)){
    console.error("The demo-directory is already existed.");
    process.exit(1);
  }
  checkName(projectName);
  try {
    fs.mkdirSync(pathName, 0777);
  } catch (err){
    console.error(err);
  }
  console.log("Creating files. This might take a couple minutes.");
 
  fs.copy(path.resolve(__dirname, '../template'), pathName)
  .then(()=>{
    let packageJson = require(path.resolve(__dirname, '../template/package.json'));
    packageJson = JSON.stringify(Object.assign({}, packageJson, {"name": projectName}));
    return fs.outputFile(pathName+"/package.json", packageJson);
  })
  .then(function(){
    console.log('success');
  })
  .catch(error=>console.error(error));
}

createReactDemo();
